# ========================
# Clash-ALL 优化配置
# ========================

# 机场节点订阅

proxy-providers:

  FlyingBird:
    url: "%FlyingBirdLink%"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: "\U0001F1E8\U0001F1F3 直连" 
    
  QiangGe:
    url: "%QiangGeLink%"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: "\U0001F1E8\U0001F1F3 直连"            

proxies:
  - {name: "\U0001F1E8\U0001F1F3 直连", type: direct}
  - {name: "⛔️ 拒绝", type: reject}

# ========================
# 策略组定义
# ========================
default: &default
  type: select
  proxies:
    - "\U0001F530 节点选择"
    - "\U0001F1ED\U0001F1F0 香港-智选"
    - "\U0001F1E8\U0001F1F3 台湾-智选"
    - "\U0001F1EF\U0001F1F5 日本-智选"
    - "\U0001F1F8\U0001F1EC 新加坡-智选"
    - "\U0001F1FA\U0001F1F8 美国-智选"
    - "\U0001F1EC\U0001F1E7 英国-智选"
    - "\U0001F30D 其他-智选"
    - "\U0001F9E0 所有-智选"
    - "\U0001F530 所有-手选"
    - "\U0001F1E8\U0001F1F3 直连"
    - "⛔️ 拒绝"

proxy-groups:

  - name: "\U0001F530 节点选择"
    type: select
    proxies:
    - "\U0001F1ED\U0001F1F0 香港-智选"
    - "\U0001F1E8\U0001F1F3 台湾-智选"
    - "\U0001F1EF\U0001F1F5 日本-智选"
    - "\U0001F1F8\U0001F1EC 新加坡-智选"
    - "\U0001F1FA\U0001F1F8 美国-智选"
    - "\U0001F1EC\U0001F1E7 英国-智选"
    - "\U0001F30D 其他-智选"
    - "\U0001F9E0 所有-智选"
    - "\U0001F530 所有-手选"
    - "\U0001F1E8\U0001F1F3 直连"
    - "⛔️ 拒绝"


  - name: "\U0001F530 所有-手选"
    type: select
    include-all: true
    filter: "^((?!(直连|拒绝)).)*$"

  - name: "\U0001F9E0 所有-智选"
    type: smart
    include-all: true
    policy-priority: "Hong:1.9"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "^((?!(直连|拒绝)).)*$"

  # 香港组
  - name: "\U0001F1ED\U0001F1F0 香港-智选"
    type: smart
    include-all: true
#   policy-priority: "QiangGe:0.8"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"
 
  # 台湾组
  - name: "\U0001F1E8\U0001F1F3 台湾-智选"
    type: smart
    include-all: true
#   policy-priority: "QiangGe:0.8"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"

  # 日本组
  - name: "\U0001F1EF\U0001F1F5 日本-智选"
    type: smart
    include-all: true
#   policy-priority: "QiangGe:0.8"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"

  # 新加坡组
  - name: "\U0001F1F8\U0001F1EC 新加坡-智选"
    type: smart
    include-all: true
#   policy-priority: "QiangGe:0.8"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)).*$"

  # 韩国组
  - name: "\U0001F1F0\U0001F1F7 韩国-智选"
    type: smart
    include-all: true
#   policy-priority: "QiangGe:0.8"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea)).*$"

  # 美国组
  - name: "\U0001F1FA\U0001F1F8 美国-智选"
    type: smart
    include-all: true
#   policy-priority: "QiangGe:0.8"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).*$"

  # 英国组
  - name: "\U0001F1EC\U0001F1E7 英国-智选"
    type: smart
    include-all: true
#   policy-priority: "QiangGe:0.8"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(英国|英|伦敦|UK|United Kingdom|🇬🇧|London)).*$"

  # 其他组
  - name: "\U0001F30D 其他-智选"
    type: smart
    include-all: true
#   policy-priority: "QiangGe:0.8"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "^((?!(直连|拒绝|广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|英国|UK|United Kingdom|伦敦|英|London|🇬🇧)).)*$"
    
  # 业务分流组
    
  - name: "\U0001F34E 苹果服务"
    type: select
    proxies:
    - "\U0001F3AF 全球直连"
    - "\U0001F530 节点选择"
    - "\U0001F6D1 全球拦截"
    
  - name: "Ⓜ️ 微软服务"
    type: select
    proxies:
    - "\U0001F3AF 全球直连"
    - "\U0001F530 节点选择"
    - "\U0001F6D1 全球拦截"
    
  - name: "\U0001F3AE Steam"
    type: select
    proxies:
    - "\U0001F3AF 全球直连"
    - "\U0001F530 节点选择"
    - "\U0001F6D1 全球拦截"    
    
  - name: "\U0001F579\U0000FE0F Game"
    type: select
    proxies:
    - "\U0001F3AF 全球直连"
    - "\U0001F530 节点选择"
    - "\U0001F6D1 全球拦截"
    
  - {name: "\U0001F916 ChatGPT", <<: *default}
  - {name: "\U00002728 Claude", <<: *default}
  - {name: "\U0001F576\U0000FE0F Meta AI", <<: *default}
  - {name: "\U000026A1 Perplexity", <<: *default}
  - {name: "\U0001F431 GitHub", <<: *default}
  - {name: "\U00002708\U0000FE0F Telegram", <<: *default}
  - {name: "\U0001F426 Twitter(X)", <<: *default}
  - {name: "\U0001F465 WhatsApp", <<: *default}
  - {name: "\U0001F4AC Facebook", <<: *default}
  - {name: "\U0001F39E\U0000FE0F YouTube", <<: *default}
  - {name: "\U0001F4F7 TikTok", <<: *default}
  - {name: "\U0001F3AC Disney", <<: *default}
  - {name: "\U0001F3AC Netflix", <<: *default}
  - {name: "\U0001F4FD\U0000FE0F HBO", <<: *default}
  - {name: "\U0001F3B6 Spotify", <<: *default}
  - {name: "\U0001F4E6 Amazon", <<: *default}
  - {name: "\U0001F310 Google", <<: *default}
  - {name: "\U0001F4FC Nvidia", <<: *default}
  - {name: "\U0001F6E1\U0000FE0F Crypto", <<: *default}
  - {name: "\U0001F9EA Test", <<: *default}
  
  - name: "\U0001F6D1 全球拦截"
    type: select
    proxies:
    - "⛔️ 拒绝"
    - "\U0001F1E8\U0001F1F3 直连"
  
  - name: "\U0001F3AF 全球直连"
    type: select
    proxies:
    - "\U0001F1E8\U0001F1F3 直连"
    - "\U0001F530 所有-手选"
    - "\U0001F9E0 所有-智选"
    
  - {name: "\U0001F41F 漏网之鱼", <<: *default}


rules:
  - "RULE-SET,Apple / Domain,\U0001F34E 苹果服务"
  - "RULE-SET,Apple-CN / Domain,\U0001F34E 苹果服务"  
  - "RULE-SET,TEST / Domain,\U0001F9EA Test"
  - "RULE-SET,Block / Domain,\U0001F6D1 全球拦截"  
  - "RULE-SET,ChatGPT / Domain,\U0001F916 ChatGPT"
  - "RULE-SET,Claude / Domain,\U00002728 Claude"
  - "RULE-SET,Meta AI / Domain,\U0001F576\U0000FE0F Meta AI"
  - "RULE-SET,Perplexity / Domain,\U000026A1 Perplexity"
  - "RULE-SET,GitHub / Domain,\U0001F431 GitHub"
  - "RULE-SET,Telegram / Domain,\U00002708\U0000FE0F Telegram"
  - "RULE-SET,Telegram / IP,\U00002708\U0000FE0F Telegram,no-resolve"
  - "RULE-SET,Twitter / Domain,\U0001F426 Twitter(X)"
  - "RULE-SET,WhatsApp / Domain,\U0001F465 WhatsApp"
  - "RULE-SET,Facebook / Domain,\U0001F4AC Facebook"
  - "RULE-SET,Amazon / Domain,\U0001F4E6 Amazon"
  - RULE-SET,Microsoft / Domain,Ⓜ️ 微软服务
  - "RULE-SET,OKX / Domain,\U0001F6E1\U0000FE0F Crypto"
  - "RULE-SET,Bybit / Domain,\U0001F6E1\U0000FE0F Crypto"
  - "RULE-SET,Binance / Domain,\U0001F6E1\U0000FE0F Crypto"
  - "RULE-SET,Youtube / Domain,\U0001F39E\U0000FE0F YouTube"
  - "RULE-SET,TikTok / Domain,\U0001F4F7 TikTok"
  - "RULE-SET,Netflix / Domain,\U0001F3AC Netflix"
  - "RULE-SET,Netflix / IP,\U0001F3AC Netflix,no-resolve"
  - "RULE-SET,Disney / Domain,\U0001F3AC Disney"
  - "RULE-SET,HBO / Domain,\U0001F4FD\U0000FE0F HBO"
  - "RULE-SET,Spotify / Domain,\U0001F3B6 Spotify"
  - "RULE-SET,Steam / Domain,\U0001F3AE Steam"
  - "RULE-SET,Epic / Domain,\U0001F579\U0000FE0F Game"
  - "RULE-SET,EA / Domain,\U0001F579\U0000FE0F Game"
  - "RULE-SET,Blizzard / Domain,\U0001F579\U0000FE0F Game"
  - "RULE-SET,UBI / Domain,\U0001F579\U0000FE0F Game"
  - "RULE-SET,PlayStation / Domain,\U0001F579\U0000FE0F Game"
  - "RULE-SET,Nintend / Domain,\U0001F579\U0000FE0F Game"
  - "RULE-SET,Google / Domain,\U0001F310 Google"
  - "RULE-SET,Google / IP,\U0001F310 Google,no-resolve"
  - "RULE-SET,Nvidia / Domain,\U0001F4FC Nvidia"
  - "RULE-SET,Proxy / Domain,\U0001F530 节点选择"
  - "RULE-SET,Globe / Domain,\U0001F530 节点选择"
  - "RULE-SET,Direct / Domain,\U0001F3AF 全球直连"
  - "RULE-SET,China / Domain,\U0001F3AF 全球直连"
  - "RULE-SET,China / IP,\U0001F3AF 全球直连,no-resolve"
  - "RULE-SET,Private / Domain,\U0001F3AF 全球直连"
  - "GEOIP,CN,\U0001F3AF 全球直连"
  - "MATCH,\U0001F41F 漏网之鱼"

# ========================
# 规则集提供者
# ========================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
  
rule-providers:
  TEST / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Check.list"}
  ChatGPT / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/openai.mrs"}
  Claude / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Claude/Claude.list"}
  Meta AI / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/MetaAi.list"}
  Perplexity / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/perplexity.mrs"}
  Copilot / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Copilot.list"}
  Gemini / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Gemini.list"}
  GitHub / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/github.mrs"}
  Telegram / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/telegram.mrs"}  
  Telegram / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/telegram.mrs"}
  Twitter / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/x.mrs"}
  WhatsApp / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Whatsapp/Whatsapp.list"}
  Facebook / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/facebook.mrs"}
  Amazon / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/amazon.mrs"}
  Apple-CN / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple-cn.mrs"}
  Apple / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple.mrs"} 
  Microsoft / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/microsoft.mrs"}
  OKX / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/okx.mrs"}
  Bybit / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/bybit.mrs"}
  Binance / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/binance.mrs"}
  TikTok / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/tiktok.mrs"}
  Netflix / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/netflix.mrs"}
  Netflix / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/netflix.mrs"}
  Disney / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/disney.mrs"}
  HBO / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/hbo.mrs"}
  Spotify / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/spotify.mrs"}
  Steam / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/steam.mrs"}
  Epic / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Epic/Epic.list"}
  EA / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/EA/EA.list"}
  Blizzard / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Blizzard/Blizzard.list"}
  UBI / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/UBI/UBI.list"}
  PlayStation / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/PlayStation/PlayStation.list"}
  Nintend / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Nintendo/Nintendo.list"}
  Proxy / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Proxy.list"}
  Globe / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list"} 
  Direct / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Direct.list"}
  China / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cn.mrs"}
  China / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/cn.mrs"}
  Private / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/private.mrs"}
  Block / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Block.list"}
  Nvidia / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Nvidia/Nvidia.list"}
  Crunchyroll / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Crunchyroll.list"}
  Reddit / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/reddit.mrs"}

  Youtube / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/youtube.mrs"}  
  Google / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/google.mrs"}  
  Google / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/google.mrs"}
# GateFireWall / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/gfw.mrs"}